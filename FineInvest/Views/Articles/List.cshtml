@using FineInvest.HtmlHelpers
@model FineInvest.Models.ListArticle

@{
    ViewBag.Title = "Статьи";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h2>
        <i class="glyphicon glyphicon-list-alt" aria-hidden="true"></i>
        @ViewBag.Title
    </h2>
    <br />
    <div class="form-horizontal">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <Label>
                Фильтр по
            </Label>
            @Html.DropDownListFor(model => model.SelectCateg, Model.AllCategory, htmlAttributes: new { @class = "form-control" })
            <label>
                Сортировать по
            </label>
            @Html.DropDownListFor(model => model.SelectSort, Model.Sortirovka, htmlAttributes: new { @class = "form-control" })

            <input type="submit" value="Применить" class="btn btn-default" />

            <a class="btn btn-primary" href="/Articles/Create">
                <span class="glyphicon glyphicon-plus"></span>  Создать статью
            </a>
        </div>

        <br />
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Articles.First().Category.Name)/
                    @Html.DisplayNameFor(model => model.Articles.First().Type.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Articles.First().Picture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Articles.First().Caption)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Articles.First().DateOrd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Articles.First().ArtTxt)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Articles)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name) / <br />
                        @Html.DisplayFor(modelItem => item.Type.Name)
                    </td>
                    <td>
                        @if (item.Picture != null)
                        {
                            @Html.Raw("<img style='width:80px; ' id='upload-img' alt='image' src=\"data:image/jpeg;base64," + Convert.ToBase64String(item.Picture) + "\" />");
                        }
                        else
                        {
                            <img style='width:80px; height:60px;' src="~/Content/Images/default.jpg" id="upload-img" alt="image" />
                        }
                    </td>
                    <td class="artTxt">
                        <a href="~/Articles/Show/@item.Id">
                            <p>@Html.DisplayFor(modelItem => item.Caption)</p>
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOrd)
                    </td>
                    <td class="artTxt">
                        <p>@Html.DisplayFor(modelItem => item.ArtTxt)</p>
                    </td>
                    <td>
                        <a class="btn btn-default" href="/Articles/Edit/@item.Id">
                            <span class="glyphicon glyphicon-pencil"></span>  Редактировать
                        </a>
                    </td>
                </tr>
            }

        </table>
        <div class="btn-group pull-right">
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { page = x }))
        </div>
    </div>
}
